
/*

   Autogenerated by CAP duplicate fixer v1.1.0 at 13-05-2021 05:03:56.

   Locations of Issue Instances ( File, [StartLine:StartColumn ~ EndLine:EndColumn] ):

   test/src/test/java/hudson/model/ComputerTest.java , [174:9~196:62]
   test/src/test/java/hudson/model/FreeStyleProjectTest.java , [185:9~207:62]
   test/src/test/java/hudson/model/ViewTest.java , [796:9~818:62]
   test/src/test/java/hudson/model/ItemGroupMixInTest.java , [288:5~310:58]

*/


package hudson.model;

import java.io.IOException;
import java.util.Map;
import com.gargoylesoftware.htmlunit.FailingHttpStatusCodeException;
import com.gargoylesoftware.htmlunit.WebRequest;
import hudson.ExtensionList;
import hudson.diagnosis.OldDataMonitor;
import org.jvnet.hudson.test.JenkinsRule;
import org.jvnet.hudson.test.JenkinsRule.WebClient;
import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.Matchers.equalTo;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.fail;

public final class ExtractedSeparateClass38745 {
    private ExtractedSeparateClass38745() {
        throw new UnsupportedOperationException("This class cannot be instantiated");
    }
    
    public static void extractedMethod70223(final WebRequest req, final String VALID_XML_BAD_FIELD_USER_XML, final JenkinsRule.WebClient wc) throws IOException {
        req.setAdditionalHeader("Content-Type", "application/xml");
        req.setRequestBody(VALID_XML_BAD_FIELD_USER_XML);
        
        try {
            wc.getPage(req);
            fail("Should have returned failure.");
        } catch (FailingHttpStatusCodeException e) {
            // This really shouldn't return 500, but that's what it does now.
            assertThat(e.getStatusCode(), equalTo(500));
        }
        
        OldDataMonitor odm = ExtensionList.lookupSingleton(OldDataMonitor.class);
        Map<Saveable, OldDataMonitor.VersionRange> data = odm.getData();
        
        assertThat(data.size(), equalTo(0));
        
        odm.doDiscard(null, null);
        
        User.AllUsers.scanAll();
        boolean createUser = false;
        User badUser = User.getById("foo", createUser);
        
        assertNull("Should not have created user.", badUser);
    }
}
