
/*

   Autogenerated by CAP duplicate fixer v1.1.0 at 13-05-2021 05:05:18.

   Locations of Issue Instances ( File, [StartLine:StartColumn ~ EndLine:EndColumn] ):

   test/src/test/java/hudson/cli/OfflineNodeCommandTest.java , [68:9~76:115]
   test/src/test/java/hudson/cli/DisconnectNodeCommandTest.java , [62:9~70:115]

*/


package hudson.cli;

import jenkins.model.Jenkins;
import org.jvnet.hudson.test.JenkinsRule;
import static hudson.cli.CLICommandInvoker.Matcher.failedWith;
import static hudson.cli.CLICommandInvoker.Matcher.hasNoStandardOutput;
import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.Matchers.containsString;
import static org.hamcrest.Matchers.not;

public final class ExtractedSeparateClass27345 {
    private ExtractedSeparateClass27345() {
        throw new UnsupportedOperationException("This class cannot be instantiated");
    }
    
    public static void extractedMethod79832(final JenkinsRule j, final CLICommandInvoker command) throws Exception {
        j.createSlave("aNode", "", null);
        
        final CLICommandInvoker.Result result = command
                .authorizedTo(Jenkins.READ)
                .invokeWithArgs("aNode");
        assertThat(result, failedWith(6));
        assertThat(result, hasNoStandardOutput());
        assertThat(result.stderr(), containsString("ERROR: user is missing the Agent/Disconnect permission"));
        assertThat(result.stderr(), not(containsString("ERROR: " + CLICommand.CLI_LISTPARAM_SUMMARY_ERROR_TEXT)));
    }
}
